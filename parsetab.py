
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'BEGIN CLASS COMMA DEF DOT ELSE END EQ FID ID IF INHERITS LP NEW NIL NUMBER RP SELF SEMI STRING THENprogram : class expressionclass : CLASS ID INHERITS ID BEGIN method ENDmethod : DEF ID expression expression ENDexpression : valueexpression : SELFexpression : IDexpression : FIDexpression : ID EQ expressionexpression : FID EQ expressionexpression : NEW IDexpression : IF expression THEN expression ELSE expressionexpression : expression SEMI expressionexpression : expression DOT expression LP expression RPvalue : NUMBERvalue : NILvalue : STRING'
    
_lr_action_items = {'CLASS':([0,],[3,]),'$end':([1,4,5,6,7,8,11,12,13,19,22,24,25,35,36,],[0,-1,-4,-5,-6,-7,-14,-15,-16,-10,-12,-8,-9,-13,-11,]),'SELF':([2,5,6,7,8,10,11,12,13,15,16,17,18,19,22,24,25,26,28,32,35,36,37,38,39,],[6,-4,-5,-6,-7,6,-14,-15,-16,6,6,6,6,-10,-12,-8,-9,6,6,6,-13,-11,-2,6,6,]),'ID':([2,3,5,6,7,8,9,10,11,12,13,15,16,17,18,19,21,22,24,25,26,28,32,34,35,36,37,38,39,],[7,14,-4,-5,-6,-7,19,7,-14,-15,-16,7,7,7,7,-10,27,-12,-8,-9,7,7,7,38,-13,-11,-2,7,7,]),'FID':([2,5,6,7,8,10,11,12,13,15,16,17,18,19,22,24,25,26,28,32,35,36,37,38,39,],[8,-4,-5,-6,-7,8,-14,-15,-16,8,8,8,8,-10,-12,-8,-9,8,8,8,-13,-11,-2,8,8,]),'NEW':([2,5,6,7,8,10,11,12,13,15,16,17,18,19,22,24,25,26,28,32,35,36,37,38,39,],[9,-4,-5,-6,-7,9,-14,-15,-16,9,9,9,9,-10,-12,-8,-9,9,9,9,-13,-11,-2,9,9,]),'IF':([2,5,6,7,8,10,11,12,13,15,16,17,18,19,22,24,25,26,28,32,35,36,37,38,39,],[10,-4,-5,-6,-7,10,-14,-15,-16,10,10,10,10,-10,-12,-8,-9,10,10,10,-13,-11,-2,10,10,]),'NUMBER':([2,5,6,7,8,10,11,12,13,15,16,17,18,19,22,24,25,26,28,32,35,36,37,38,39,],[11,-4,-5,-6,-7,11,-14,-15,-16,11,11,11,11,-10,-12,-8,-9,11,11,11,-13,-11,-2,11,11,]),'NIL':([2,5,6,7,8,10,11,12,13,15,16,17,18,19,22,24,25,26,28,32,35,36,37,38,39,],[12,-4,-5,-6,-7,12,-14,-15,-16,12,12,12,12,-10,-12,-8,-9,12,12,12,-13,-11,-2,12,12,]),'STRING':([2,5,6,7,8,10,11,12,13,15,16,17,18,19,22,24,25,26,28,32,35,36,37,38,39,],[13,-4,-5,-6,-7,13,-14,-15,-16,13,13,13,13,-10,-12,-8,-9,13,13,13,-13,-11,-2,13,13,]),'SEMI':([4,5,6,7,8,11,12,13,19,20,22,23,24,25,29,31,35,36,39,40,],[15,-4,-5,-6,-7,-14,-15,-16,-10,15,15,15,15,15,15,15,-13,15,15,15,]),'DOT':([4,5,6,7,8,11,12,13,19,20,22,23,24,25,29,31,35,36,39,40,],[16,-4,-5,-6,-7,-14,-15,-16,-10,16,16,16,16,16,16,16,-13,16,16,16,]),'THEN':([5,6,7,8,11,12,13,19,20,22,24,25,35,36,],[-4,-5,-6,-7,-14,-15,-16,-10,26,-12,-8,-9,-13,-11,]),'LP':([5,6,7,8,11,12,13,19,22,23,24,25,35,36,],[-4,-5,-6,-7,-14,-15,-16,-10,-12,28,-8,-9,-13,-11,]),'ELSE':([5,6,7,8,11,12,13,19,22,24,25,29,35,36,],[-4,-5,-6,-7,-14,-15,-16,-10,-12,-8,-9,32,-13,-11,]),'RP':([5,6,7,8,11,12,13,19,22,24,25,31,35,36,],[-4,-5,-6,-7,-14,-15,-16,-10,-12,-8,-9,35,-13,-11,]),'END':([5,6,7,8,11,12,13,19,22,24,25,33,35,36,40,41,],[-4,-5,-6,-7,-14,-15,-16,-10,-12,-8,-9,37,-13,-11,41,-3,]),'EQ':([7,8,],[17,18,]),'INHERITS':([14,],[21,]),'BEGIN':([27,],[30,]),'DEF':([30,],[34,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'class':([0,],[2,]),'expression':([2,10,15,16,17,18,26,28,32,38,39,],[4,20,22,23,24,25,29,31,36,39,40,]),'value':([2,10,15,16,17,18,26,28,32,38,39,],[5,5,5,5,5,5,5,5,5,5,5,]),'method':([30,],[33,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> class expression','program',2,'p_p','test.py',82),
  ('class -> CLASS ID INHERITS ID BEGIN method END','class',7,'p_c','test.py',86),
  ('method -> DEF ID expression expression END','method',5,'p_m','test.py',90),
  ('expression -> value','expression',1,'p_expression','test.py',94),
  ('expression -> SELF','expression',1,'p_self','test.py',98),
  ('expression -> ID','expression',1,'p_id','test.py',102),
  ('expression -> FID','expression',1,'p_fid','test.py',106),
  ('expression -> ID EQ expression','expression',3,'p_locwr','test.py',110),
  ('expression -> FID EQ expression','expression',3,'p_fldwr','test.py',114),
  ('expression -> NEW ID','expression',2,'p_new','test.py',118),
  ('expression -> IF expression THEN expression ELSE expression','expression',6,'p_if','test.py',122),
  ('expression -> expression SEMI expression','expression',3,'p_seq','test.py',126),
  ('expression -> expression DOT expression LP expression RP','expression',6,'p_invoke','test.py',130),
  ('value -> NUMBER','value',1,'p_int','test.py',134),
  ('value -> NIL','value',1,'p_nil','test.py',138),
  ('value -> STRING','value',1,'p_string','test.py',142),
]
