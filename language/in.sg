# BEGIN TEST ##############################################

1

# END TEST   ##############################################

# BEGIN TEST ##############################################

x = 1;
x

# END TEST   ##############################################

# BEGIN TEST ##############################################

x = 5;
x = 1;
x

# END TEST   ##############################################

# BEGIN TEST ##############################################

@x = 1;
@x

# END TEST   ##############################################

# BEGIN TEST ##############################################

@x = 5;
@x = 1;
@x

# END TEST   ##############################################

# BEGIN TEST ##############################################

1.+(0)

# END TEST   ##############################################

# BEGIN TEST ##############################################

2.-(1)

# END TEST   ##############################################

# BEGIN TEST ##############################################

10./(10)

# END TEST   ##############################################

# BEGIN TEST ##############################################

1./(1)

# END TEST   ##############################################

# BEGIN TEST ##############################################

1.print()

# END TEST   ##############################################

# BEGIN TEST ##############################################

1.equal?(1)

# END TEST   ##############################################

# BEGIN TEST ##############################################

1.to_s()

# END TEST   ##############################################

# BEGIN TEST ##############################################

"1".print()

# END TEST   ##############################################

# BEGIN TEST ##############################################

"".+("1").print()

# END TEST   ##############################################

# BEGIN TEST ##############################################

"1".length()

# END TEST   ##############################################

# BEGIN TEST ##############################################

"1".equal?("1")

# END TEST   ##############################################

# BEGIN TEST ##############################################

class Foo < Object
begin
end

1

# END TEST   ##############################################

# BEGIN TEST ##############################################

class Foo < Object
begin
	def bar(x)
		x
	end
	def bar()
		1
	end
end

1

# END TEST   ##############################################

# BEGIN TEST ##############################################

class Foo < Object
begin
	def bar(x)
		x
	end
	def foo()
		1
	end
end

(new Foo);
1

# END TEST   ##############################################

# BEGIN TEST ##############################################

class Foo < Object
begin
	def bar(x)
		x
	end
	def foo()
		1
	end
end

(new Foo).foo()

# END TEST   ##############################################

# BEGIN TEST ##############################################

class Foo < Object
begin
	def bar(x)
		x
	end
	def foo()
		1
	end
end

(new Foo).bar(1)

# END TEST   ##############################################

# BEGIN TEST ##############################################

class Foo < Object
begin
	def bar(x)
		@x = x;
		@x
	end
	def foo()
		1
	end
end

(new Foo).bar(1)

# END TEST   ##############################################

# BEGIN TEST ##############################################

class C < Object
begin
  def m(a, b)
    a.+(b)
  end
end

@x = new C;
@x.m(0, 1)

# END TEST   ##############################################

# BEGIN TEST ##############################################

class C < Object
begin
  def m(a, b, c)
    a.+(b).+(c)
  end
end

@x = new C;
@x.m(0, 1, 0)

# END TEST   ##############################################

# BEGIN TEST ##############################################

class C < Object
begin
  def m(a, b, c, d)
    a.+(b).+(c).+(d)
  end
end

@x = new C;
@x.m(0, 1, 0, 0)

# END TEST   ##############################################

# BEGIN TEST ##############################################

class Foo < Object
begin
  def mymethod(x)
    if x then 2 else 1 end
  end
end

(new Foo).mymethod(nil)

# END TEST   ##############################################

